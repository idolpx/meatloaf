; Meatloaf PlatformIO Project Configuration File
;
; Quick Start Instructions:
;
;   Set the following options in this file:
;       in [meatloaf] section: Set your environment and flash_size
;       in [env] section: Set your upload_port and monitor_port
;
;   To build in VSCode, select the PlatformIO icon on the sidebar and expand
;   the section for the board you have chosen (ie, lolin-d32). First, choose
;   choose Upload under the General section, then choose Upload Filesystem 
;   image under the Platform section.
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[meatloaf]
description = Meatloaf Commodore to ESP32 WiFi Multifunction Firmware

; Uncomment ONLY ONE of the below lines to target the hardware you use
; GPIO pin assignments are located in the include/pinmap/ directory for reference

; ESP32-WROVER
;environment = iec-nugget                   ; Wemos Lolin D32 Pro                         (ESP32-WROVER 8M PSRAM, 4M/8M/16M Flash)
;environment = lolin-d32-pro                ; Wemos Lolin D32 Pro                         (ESP32-WROVER 8M PSRAM, 4M/8M/16M Flash)
;environment = fujiapple-rev0               ; FujiApple REV0 with esp32-devkitc           (ESP32-WROVER 8M PSRAM, 8M Flash)
;environment = fujinet-v16                  ; FujiNet v1.6                                (ESP32-WROVER 8M PSRAM, 16M Flash)
;environment = fujiloaf-rev0                ; Meatloaf / FujiNet REV0 board, aka Fujiloaf (ESP32-WROVER 8M PSRAM, 16M Flash)

; ESP32-WROOM32
;environment = esp32-wroom32                ; generic esp32-wroom32 board                 (ESP32-WROOM32 NO PSRAM, 4M/8M/16M Flash)
;environment = esp32-wroom32-pi1541         ; generic esp32-wroom32 board with pi1541     (ESP32-WROOM32 NO PSRAM, 4M/8M/16M Flash)
;environment = ttgo-t1                      ; Lilygo TTGO T1 V1.3                         (ESP32 NO PSRAM, 4M Flash)

; EXPERIMENTAL
; ESP32-S2
;environment = lolin-s2-mini                ; Wemos Lolin S2 Mini                         (ESP32-S2 2M PSRAM, 4M Flash)

; ESP32-S3
;environment = esp32-s3-devkitc-1           ; esp32s3 devkitc                             (ESP32-S3 2M/8M PSRAM, 8M/16M/32M Flash)
;environment = lolin-s3-pro                 ; Wemos Lolin S3 Pro                          (ESP32-S3 8M PSRAM, 16M Flash)
;environment = lilygo-t-display-s3          ; LilyGO T-Display S3                         (ESP32-S3 8M PSRAM, 16M Flash)
;environment = freenove-esp32-s3-wroom-1    ; Freenove ESP32-S3-WROOM-1                   (ESP32-S3 8M PSRAM, 16M Flash)
;environment = esp32-s3-zero                ;                                             (ESP32-S3 2M PSRAM, 4M Flash)
;environment = esp32-s3-super-mini          ;                                             (ESP32-S3 2M PSRAM, 4M Flash)
;environment = adafruit_feather_esp32s3_tft ; Adafruit ESP32-S3 TFT Feather               (ESP32-S3 2M PSRAM, 4M Flash)

; ESP32-C3
;environment = esp32-c3-super-mini          ;                                             (ESP32-C3 NO PSRAM, 4M Flash)

; NATIVE UNIT TESTING
;environment = native                       ; For running tests that don't require embedded hardware

; Set flash size to 4M, 8M, 16M or 32M according to the enviornment you selected above
;flash_size = 4m
;flash_size = 8m
flash_size = 16m
;flash_size = 32m

; Choose SPIFFS or LITTLEFS for the filesystem used on internal flash
;flash_filesystem = FLASH_SPIFFS
flash_filesystem = FLASH_LITTLEFS

; Set default WiFi credentials
wifi_ssid = "meatloaf"
wifi_pass = "meatloaf"

; Required flags, leave as is
build_platform = BUILD_IEC
build_bus      = IEC

[platformio]
description = ${meatloaf.description}
default_envs = ${meatloaf.environment}
data_dir = data/${meatloaf.build_platform}.${meatloaf.flash_size}

[esp32_base]
; Espressif32 PlatformIO Version to use for building
; https://github.com/platformio/platform-espressif32/releases
;platform = espressif32 @ 6.3.2
;platform = espressif32 @ 6.6.0 ;works
platform = espressif32 @ 6.10.0
framework = espidf
board_build.filesystem = littlefs
test_filter = embedded/*
extra_scripts = 
;    pre:build_version.py
;    post:build_firmwarezip.py

[env]
; Common settings for all enivornments
build_type = debug ;debug ;release
lib_ldf_mode = deep+ ; off chain deep chain+ deep+
upload_speed = 460800 ;460800 ;921600
;upload_port = COM1 ; Windows
;upload_port = /dev/ttyUSB0 ; Linux
;upload_port = /dev/cu.usbserial-144210 ; Mac
monitor_speed = 460800 ;460800 ;921600
;monitor_port = COM1 ; Windows
;monitor_port = /dev/ttyUSB0 ; Linux
;monitor_port = /dev/cu.usbserial-144210 ; Mac
monitor_filters = esp32_exception_decoder
check_skip_packages = yes
;debug_tool = esp-prog
;debug_init_break = tbreak setup

; Build flags used by ALL boards go here
build_flags =
    -std=gnu++17
    -D ${meatloaf.build_platform}
    -D ${meatloaf.flash_filesystem}
    -D CMAKE_EXPORT_COMPILE_COMMANDS=ON

    ; Default WiFi
    -D WIFI_SSID=\"${meatloaf.wifi_ssid}\"
    -D WIFI_PASSWORD=\"${meatloaf.wifi_pass}\"

    ; Firmware Version
    ;-D MEATLOAF_MAX

    ; IEC Hardware Options
    ; These options are also useful for reusing a PI1541 Hat with Meatloaf
    ;-D IEC_SPLIT_LINES     ; hardware uses seperate input/output lines
    ;-D IEC_INVERTED_LINES  ; hardware inverts the signals

    ; Other Hardware Options
    ;-D NO_BUTTONS          ; if your hardware has no physical buttons
    ;-D SD_CARD             ; if your hardware has an sd card slot
    ;-D PARALLEL_BUS        ; if your hardware has userport parallel interface
    ;-D JTAG                ; enable use with JTAG debugger
    ;-D BLUETOOTH_SUPPORT   ; enable BlueTooth support

    ; Service Options
    ;-D ENABLE_ZIMODEM      ; enable Zimodem functionality
    ;-D ENABLE_SSDP         ; enable Simple Service Discovery Protocol service
    -D ENABLE_CONSOLE      ; enable console service
    -D ENABLE_CONSOLE_TCP  ; enable tcp server for console
    -D ENABLE_DISPLAY      ; enable display service
    ;-D ENABLE_AUDIO        ; enable audio service

    ; GPIO Expander Selection (select only one if available)
    ;-D GPIOX_PCF8575
    ;-D GPIOX_MCP23017
    ;-D GPIOX_XRA1405

    ; Protocol Support
    ;-D JIFFYDOS

    ; Component Options
    ;-D QRCODEVERSION=8

    ; DEBUG Options
    -D DEBUG_SPEED=${env.monitor_speed}
    ;-D DELAY_START_MILLIS=2000 ; allow time to connect to USB serial device
    ;-D DATA_STREAM
    ;-D VERBOSE_TNFS
    ;-D VERBOSE_DISK
    ;-D VERBOSE_HTTP
    ;-D VERBOSE_PROTOCOL
    ;-D DEBUG_TIMING
    ;-D NO_VIRTUAL_KEYBOARD
    ;-D DBUG2 ; enable monitor messages for a release build
    ;-D RUN_TESTS

build_unflags =
    -std=gnu++11

[env:native]
; Add Code Coverage Reporting
; https://piolabs.com/blog/insights/test-coverage-on-unit-testing.html
; https://blog.leon0399.ru/platformio-coverage-github-actions
platform = native
test_filter = native/*
extra_scripts = gen_coverage.py
build_flags =
    ${env.build_flags}
    -D TEST_NATIVE
    ;-lgcov
    ;--coverage
    ;-fprofile-abs-path


; ESP32-WROVER
[env:fujiloaf-rev0]
extends = esp32_base
board = esp32-wrover-16m
build_flags =
    ${env.build_flags}
    -D PINMAP_FUJILOAF_REV0
    -D SD_CARD
    -D ENABLE_DISPLAY
    ;-D PARALLEL_BUS
    ;-D GPIOX_PCF8575
    ;-D MEATLOAF_MAX
    ;-D JIFFYDOS
    ;-D ENABLE_SSDP
    ;-D USE_VDRIVE

[env:lolin-d32-pro]
extends = esp32_base
board = esp32-wrover-16m
build_flags =
    ${env.build_flags}
    -D PINMAP_LOLIN_D32_PRO
    -D NO_BUTTONS
    -D SD_CARD

[env:iec-nugget]
extends = esp32_base
board = esp32-wrover-16m
build_flags =
    ${env.build_flags}
    -D PINMAP_IEC_NUGGET
    -D NO_BUTTONS
    -D SD_CARD

[env:fujiapple-rev0]
extends = esp32_base
board = esp32-wrover-8m
build_flags =
    ${env.build_flags}
    -D PINMAP_A2_REV0
    -D SD_CARD

[env:fujinet-v16]
extends = esp32_base
board = esp32-wrover-8m
build_flags =
    ${env.build_flags}
    -D PINMAP_FN_16
    -D SD_CARD

; ESP32-WROOM32
[env:esp32-wroom32]
extends = esp32_base
board = esp32-wroom32
build_flags =
    ${env.build_flags}
    -D PINMAP_WROOM32
    -D NO_BUTTONS
    -D SD_CARD

[env:esp32-wroom32-pi1541]
extends = esp32_base
board = esp32-wroom32
build_flags =
    ${env.build_flags}
    -D PINMAP_WROOM32_1541
    -D NO_BUTTONS
    -D IEC_SPLIT_LINES
    -D IEC_INVERTED_LINES

[env:ttgo-t1]
extends = esp32_base
board = esp32-wroom32
build_flags =
    ${env.build_flags}
    -D PINMAP_TTGO_T1
    -D SD_CARD

; ESP32-S2
[env:lolin-s2-mini]
extends = esp32_base
board = esp32-s2fh4
build_flags =
    ${env.build_flags}
    -D PINMAP_LOLIN_S2_MINI
    -D NO_BUTTONS

; ESP32-S3
[env:esp32-s3-devkitc-1]
extends = esp32_base
board = esp32-s3-wroom-1-n16r8
build_flags =
    ${env.build_flags}
    -D PINMAP_ESP32S3_DEVKITC_1
    -D NO_BUTTONS

[env:lolin-s3-pro]
extends = esp32_base
board = esp32-s3-wroom-1-n16r8
build_flags =
    ${env.build_flags}
    -D PINMAP_LOLIN_S3_PRO
    -D NO_BUTTONS
    -D SD_CARD

[env:lilygo-t-display-s3]
extends = esp32_base
board = esp32-s3-wroom-1-n16r8
build_flags =
    ${env.build_flags}
    -D PINMAP_LILYGO_T_DISPLAY_S3
    -D SD_CARD

[env:freenove-esp32-s3-wroom-1]
extends = esp32_base
board = esp32-s3-wroom-1-n16r8
build_flags = 
    ${env.build_flags}
    -D PINMAP_FREENOVE_ESP32S3
    -D NO_BUTTONS
    -D SD_CARD

[env:esp32-s3-zero]
extends = esp32_base
board = esp32-s3fh4r2
build_flags =
    ${env.build_flags}
    -D PINMAP_ESP32_S3_ZERO
    -D NO_BUTTONS

[env:esp32-s3-super-mini]
extends = esp32_base
board = esp32-s3fh4r2
build_flags =
    ${env.build_flags}
    -D PINMAP_ESP32_S3_SUPER_MINI
    -D NO_BUTTONS

[env:adafruit_feather_esp32s3_tft]
extends = esp32_base
board =  esp32-s3fh4r2
build_flags =
    ${env.build_flags}
    -D PINMAP_ADAFRUIT_FEATHER_ESP32S3_TFT
    -D NO_BUTTONS

; ESP32-C3
[env:esp32-c3-super-mini]
extends = esp32_base
board = esp32-c3fn4
build_flags =
    ${env.build_flags}
    -D PINMAP_ESP32_C3_SUPER_MINI
    -D NO_BUTTONS